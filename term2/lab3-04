/*Напишите программу, которая сортирует массив и выводит все элементы массива, которые встречаются ровно K раз.
Входные данные
Первая строка содержит размер массива N . Во второй строке через пробел задаются N чисел – элементы массива. Гарантируется, что 0 < N ≤ 1000 . В третьей строке записано натуральное число K .
Выходные данные
Программа должна вывести все элементы массива, которые встречаются ровно K раз, в порядке возрастания, разделив их пробелами. Если таких элементов нет, программа должна вывести число 0.
Примеры
входные данные
6
1 2 1 2 3 5
2
выходные данные
1 1 2 2 3 5
1 2
*/

#include <iostream>
#include <string>
#include <windows.h>
#include <iomanip>
#include <time.h>
using namespace std;
void QuickSort(int arr[], int right)
{
	int i = 0;							
	int j = right;						
	int pivot = arr[right / 2];			
	while (i <= j)						 
	{
		while (arr[i] < pivot)			 
			i++;						
		while (arr[j] > pivot)			
			j--;
		
		if (i <= j)					
		{
			swap(arr[i], arr[j]);
			i++;
			j--;
		}
	}

	if (i < right)						
		QuickSort(arr + i, right - i);	
	if (j>0)
		QuickSort(arr, j);
}

int main()
{
	setlocale(LC_ALL, "Rus");
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	const int N = 10;
	int a = 0, b = 10;
	//srand(time(NULL));
	int arr[N] ;
	//заполнение массива случайными
	for (int& el : arr)
	{
		el = a + rand() % (b - a + 1);
		cout << el << ' ';
	}
	cout << endl;
	
	int kolvo = 1;
	int nol = 1;
	int k = 3;
	cout << "Введите количество повторов" << endl;
	cin >> k;
	cout << endl;

	//Быстрая сортировка: в функцию передается исходный массив (указатель на первый элемент массива) и индекс последнего элемента в массиве
	QuickSort(arr, N-1);
	
	//печать итогового массива
	for (int el : arr)
		cout << el << ' ';
	cout << endl;
	
	//Поиск элементов, встречающихся ровно К раз
	for (int i = 0; i < N ; i++)
	{
		if (i!=N-1)
		{
			if (arr[i] == arr[i + 1])
				kolvo++;
			if (arr[i] != arr[i + 1])
			{
				if (kolvo == k)
				{
					cout << arr[i] << ' ';
					nol = 0;
				}
				kolvo = 1;
			}
		}
		else
		{
				if (kolvo == k)
				{
					cout << arr[i] << ' ';
					nol = 0;
				}
				kolvo = 1;
		}
	}
	cout << endl;
	if (nol == 1)
		cout << '0' << endl;
	
	return 0;
}
