/*21. Напишите программу, которая выполняет "сжатие массива" – заполняет все копии уже ранее встречавшихся элементов нулями и переставляет все нулевые элементы в конец массива. 
При этом все оставшиеся элементы располагаются в начале массива в том же порядке, что и в исходном массиве.
Входные данные
Первая строка содержит размер массива N . Во второй строке через пробел задаются N чисел – элементы массива. Гарантируется, что 0 < N ≤ 10000 .
Выходные данные
Программа должна вывести в одну строчку все элементы получившегося массива, разделив их пробелами.
Примеры
входные данные
6
0 1 2 1 2 3
выходные данные
1 2 3 0 0 0

*/
#include <iostream>
#include <string>
#include <windows.h>
#include <iomanip>
#include <cmath>
#include <time.h>
using namespace std;

int main()
{
	setlocale(LC_ALL, "Rus");
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	const int N = 10;
	int a = 0, b = 10;
	srand(time(NULL));
	int arr[N], arrtemp[N] = {0};
	

	cout << endl << "Массив состоит из следующих элементов:" << endl;
	for (int& el : arr)
	{
		el = a + rand() % (b - a + 1);
		cout << setw(4) << el;
	}
	//Проставляем нули во все повторные элементы. 
	//выполняем от первого элемента до предпоследнего: берем каждый ненулевой элемент и сравниваем с другими элементами из диапазона [от следующего после текущего элемента до последнего]
	//если результат сравнения ==, то записываем в элемент, с которым сравнивали 0. 
	for (int i = 0; i < (N - 1); i++)
	{
		if (arr[i] != 0)
		{
			for (int j = i + 1; j < N; j++)
			{
				if (arr[i] == arr[j])
					arr[j] = 0;
			}
		}
	}

	//Перестановка нулей в конец массива
	//перебор элементов если элемент !=0, то записываем его в новый массив, если элемент =0, то в новом массиве ничего не записываем и на следующий элемент нового массива не переходим
	for (int i = 0, j = 0; i<N; i++, j++)
		{
		if (arr[i]!=0)
		arrtemp[j] = arr[i];
		if (arr[i] == 0)
			j--;
		}
	
	cout << endl << "Новый массив:" << endl;
	for (int el : arrtemp)
	{
		cout << setw(4) << el;
	}

	return 0;
}