/*25. Напишите программу, которая выделяет в другой массив все элементы исходного массива, которые встречаются более одного раза.
Входные данные
Первая строка содержит размер массива N . Во второй строке через пробел задаются N чисел – элементы массива. Гарантируется, что 0 < N ≤ 10000 .
Выходные данные
Программа должна вывести содержимое полученного массива: все элементы исходного массива, которые встречаются более одного раза, в том же порядке. Если таких нет, нужно вывести число 0.
Примеры
входные данные
6
4 1 2 1 2 3
выходные данные
1 2

*/
#include <iostream>
#include <string>
#include <windows.h>
#include <iomanip>
#include <cmath>
#include <time.h>
using namespace std;

int main()
{
	setlocale(LC_ALL, "Rus");
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	const int N = 10;
	int a = 0, b = 5;
	srand(time(NULL));
	int arr[N];
	int sizenew = N;
	int *arrtemp=new int[sizenew];			//на этапе компиляции не знаем какой размер массива будет, поэтому новый массив динамический
	
	cout << endl << "Массив состоит из следующих элементов:" << endl;
	for (int& el : arr)
	{
		el = a + rand() % (b - a + 1);
		cout << setw(4) << el;
		
	}
	
	//заполняем новый массив повторными элементами
	
	int ekz = 0;
	for (int i = 0; i < N-1; i ++)
	{
		for (int j = i + 1; j < N; j++)
		{
			if (arr[i] == arr[j])
			{
				arrtemp[ekz] = arr[i];
				ekz++;							//считает сколько раз встретилось повторных элементов
			}
		}
	}
	sizenew = ekz;								//размер нового массива = количеству встреченных повторов
	
	
	//Убираем из нового массива все повторные элементы
	for (int i = 0; i < sizenew - 1; i++)
	{
		for (int j = i+1; j < sizenew; j++)
		{
			if (arrtemp[i] == arrtemp[j])				//если встретили повтор, то сдвигаем все элементы влево, при этом уменьшаем размер массива и уменьшаем индекс элемента, с которым сравниваем
			{
				for (int k = j; k < sizenew-1; k++)
					arrtemp[k] = arrtemp[k + 1];
				sizenew--;
				j--;
			}
			
		}

	}
	cout << endl << "Новый массив:" << endl;
	for (int i = 0; i < sizenew; i++)
	{
		cout << setw(4) << arrtemp[i];
	}
	
	delete[] arrtemp;					//освобождаем память
	return 0;
}